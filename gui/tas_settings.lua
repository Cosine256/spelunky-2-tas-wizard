local common_gui = require("gui/common_gui")
local game_controller = require("game_controller")
local Tool_GUI = require("gui/tool_gui")

local module = Tool_GUI:new("tas_settings", "TAS Settings", "tas_settings_window")

local function draw_tas_settings(ctx, tas)
    tas.name = ctx:win_input_text("Name", tas.name)
    -- TODO: Use a multi-line text input.
    tas.description = ctx:win_input_text("Description", tas.description)

    ctx:win_separator_text("Start settings")
    if #tas.levels > 0 then
        ctx:win_text("Warning: This TAS has recorded data. Modifying the start settings can change level generation and RNG, which may cause it to desynchronize.")
    end
    common_gui.draw_tas_start_settings(ctx, tas, false)

    ctx:win_separator_text("Generated data")
    tas.save_player_positions = ctx:win_check("Save player positions", tas.save_player_positions)
    ctx:win_text("Player positions are used to show the player paths through each level and to detect desyncs. If this setting is enabled, then player positions are saved as part of the TAS file, but this will greatly increase its file size. If disabled, then the TAS will always need to be played back once when loaded to store these positions in memory.")
    if ctx:win_button("Clear player positions") then
        tas:clear_all_player_positions()
    end
    ctx:win_text("Clears stored player position data. Use this if you believe the stored data is out of sync with the inputs. This data can be regenerated by playing back the TAS.")
    tas.save_level_snapshots = ctx:win_check("Save level snapshots", tas.save_level_snapshots)
    ctx:win_text("Level snapshots allow the TAS to be played back from the start of the nearest level instead of the start of the run. If this setting is enabled, then level snapshots are saved as part of the TAS file, but this will greatly increase its file size. If disabled, then the TAS will always need to be played back once when loaded to store these snapshots in memory.")
    if ctx:win_button("Clear level snapshots") then
        tas:clear_all_level_snapshots()
    end
    ctx:win_text("Clears stored level snapshot data. Use this if you believe the stored data is out of sync with the inputs. This data can be regenerated by playing back the TAS.")

    ctx:win_separator_text("Reset")
    if ctx:win_button("Reset TAS") then
        active_tas_session.desync = nil
        game_controller.reset_session_vars()
        tool_guis.frames.reset_vars()
        tool_guis.single_frame_editor:close()
        tas.levels = {}
        tas.tagged_frames = {}
    end
    ctx:win_text("Resets the TAS to an empty state, clearing all recorded inputs and generated data. This does not reset the start settings.")
end

function module:draw_panel(ctx, is_window)
    if active_tas_session then
        draw_tas_settings(ctx, active_tas_session.tas)
    else
        ctx:win_text("No TAS loaded.")
    end
end

return module
